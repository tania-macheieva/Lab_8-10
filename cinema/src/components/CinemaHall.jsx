import React, { useState, useEffect } from "react";
import BookingService from "../services/BookingService";

const CinemaHall = ({ seatRows: initialSeatRows, selectedSeats, onSeatClick, movieId, session }) => {
  const [seatRows, setSeatRows] = useState(initialSeatRows);
  const [loading, setLoading] = useState(true);
  const [loadingError, setLoadingError] = useState(false);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–∏—Ö –º—ñ—Å—Ü—å –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ñ—ñ–ª—å–º—É –∞–±–æ —Å–µ–∞–Ω—Å—É
  useEffect(() => {
    if (movieId && session) {
      setLoading(true);
      setLoadingError(false);
      
      try {
        // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω—ñ –º—ñ—Å—Ü—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–µ–∞–Ω—Å—É
        const bookedSeats = BookingService.getBookedSeatsForSession(
          movieId,
          session.date,
          session.time
        );
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –º—ñ—Å—Ü—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–∏—Ö
        const updatedSeatRows = initialSeatRows.map(row => {
          const updatedSeats = row.seats.map(seat => {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ü–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å–ø–∏—Å–∫—É –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–∏—Ö
            const isBooked = bookedSeats.some(bookedSeat => bookedSeat.id === seat.id);
            
            if (isBooked && seat.status !== 'booked') {
              return { ...seat, status: 'booked' };
            }
            
            return seat;
          });
          
          return {
            ...row,
            seats: updatedSeats
          };
        });
        
        setSeatRows(updatedSeatRows);
      } catch (error) {
        console.error("Error loading booked seats:", error);
        setLoadingError(true);
      } finally {
        setLoading(false);
      }
    }
  }, [movieId, session, initialSeatRows]);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Ü—ñ–Ω–∏ –º—ñ—Å—Ü—è
  const getSeatPrice = (seat) => {
    return seat.type === "vip" ? "250‚Ç¥" : "150‚Ç¥";
  };

  // –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–∏–±—Ä–∞–Ω–∏—Ö –º—ñ—Å—Ü—å
  const getSelectedSeatsInfo = () => {
    const standardCount = selectedSeats.filter(seat => !seat.type || seat.type !== "vip").length;
    const vipCount = selectedSeats.filter(seat => seat.type === "vip").length;
    
    if (standardCount === 0 && vipCount === 0) {
      return "–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü—è –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è";
    }
    
    let info = [];
    if (standardCount > 0) {
      info.push(`${standardCount} —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö`);
    }
    if (vipCount > 0) {
      info.push(`${vipCount} VIP`);
    }
    
    return `–í–∏–±—Ä–∞–Ω–æ: ${info.join(", ")}`;
  };

  return (
    <div className="seat-selection-container">
      {loading ? (
        <div className="loading-indicator">
          <div className="loading-spinner"></div>
          <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –∑–∞–ª—É...</p>
        </div>
      ) : loadingError ? (
        <div className="error-message">
          <p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–ª—É. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
          <button className="retry-btn" onClick={() => window.location.reload()}>
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
          </button>
        </div>
      ) : (
        <>
          <div className="seat-selection-instructions">
            <h3>–í–∏–±—ñ—Ä –º—ñ—Å—Ü—å</h3>
            <p>
              –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—ñ –º—ñ—Å—Ü—è –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –Ω–∏–∂—á–µ.
              <br />
              VIP-–º—ñ—Å—Ü—è –º–∞—é—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è –Ω—ñ–≥ —Ç–∞ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –Ω–∞–ø–æ—ó.
            </p>
            <div className="selected-seats-counter">
              {getSelectedSeatsInfo()}
            </div>
          </div>
          
          <div className="screen-container">
            <div className="screen"></div>
            <div className="screen-label">–ï–ö–†–ê–ù</div>
          </div>
          
          <div className="seat-map">
            {seatRows.map(row => (
              <div className="seat-row" key={row.row}>
                <div className="row-label">{row.row}</div>
                <div className="seats">
                  {row.seats.map(seat => {
                    const isSelected = selectedSeats.some(s => s.id === seat.id);
                    const seatClass = `seat ${seat.status} ${
                      seat.type === "vip" ? "vip" : ""
                    } ${isSelected ? "selected" : ""}`;
                    return (
                      <div
                        className={seatClass}
                        key={seat.id}
                        onClick={() => onSeatClick(seat)}
                        aria-label={`–ú—ñ—Å—Ü–µ ${seat.id}, ${
                          seat.status === "available" ? "–¥–æ—Å—Ç—É–ø–Ω–µ" : 
                          seat.status === "booked" ? "–∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–µ" : "–≤–∏–±—Ä–∞–Ω–µ"
                        }${seat.type === "vip" ? ", VIP" : ""}`}
                        role="button"
                        tabIndex={seat.status !== "booked" ? 0 : -1}
                        data-price={getSeatPrice(seat)}
                      >
                        <span className="seat-number">
                          {seat.id.substring(1)}
                        </span>
                        {seat.status !== "booked" && seat.type === "vip" && (
                          <span className="seat-type-icon">‚òÖ</span>
                        )}
                      </div>
                    );
                  })}
                </div>
              </div>
            ))}
          </div>
          
          <div className="seat-legend">
            <div className="legend-item">
              <div className="seat available"></div>
              <span>–î–æ—Å—Ç—É–ø–Ω—ñ</span>
            </div>
            <div className="legend-item">
              <div className="seat selected"></div>
              <span>–í–∏–±—Ä–∞–Ω—ñ</span>
            </div>
            <div className="legend-item">
              <div className="seat booked"></div>
              <span>–ó–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω—ñ</span>
            </div>
            <div className="legend-item">
              <div className="seat available vip"></div>
              <span>VIP</span>
            </div>
          </div>
          
          <div className="seat-selection-tips">
            <div className="tip">
              <span className="tip-icon">üí°</span>
              <span className="tip-text">–ü–æ—Ä–∞–¥–∞: VIP-–º—ñ—Å—Ü—è –º–∞—é—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ñ—à—ñ —Å–∏–¥—ñ–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏.</span>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default CinemaHall;